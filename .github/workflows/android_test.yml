# .github/workflows/automation.yml
name: Run Automation Script

on:
  push:
    branches: [master]  # 또는 main

jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Install Android SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          mv cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

      - name: Install SDK packages
        run: |
          yes | sdkmanager --sdk_root=$HOME/android-sdk "platform-tools" "platforms;android-33"

      - name:  Install emulator tools
        run: |
          yes | sdkmanager --sdk_root=$HOME/android-sdk "emulator" "system-images;android-33;google_apis;x86_64"

      - name: Create & start emulator
        run: |
          echo "no" | avdmanager create avd -n test-emulator \
            -k "system-images;android-33;google_apis;x86_64" --device "pixel"

          nohup $HOME/android-sdk/emulator/emulator -avd test-emulator \
            -no-audio -no-boot-anim -no-window -gpu swiftshader_indirect -no-snapshot \
            > /dev/null 2>&1 &

      - name: Wait for emulator to boot
        run: |
          echo "Waiting for emulator to start..."
          $HOME/android-sdk/platform-tools/adb wait-for-device

          boot_completed=""
          retries=60
          until [[ "$boot_completed" == "1" || $retries -le 0 ]]; do
            boot_completed=$($HOME/android-sdk/platform-tools/adb shell getprop sys.boot_completed | tr -d '\r')
            echo "Boot status: $boot_completed"
            sleep 5
            retries=$((retries - 1))
          done

          if [[ "$boot_completed" != "1" ]]; then
            echo "Emulator failed to boot."
            cat emulator.log || true
            exit 1
          fi

          $HOME/android-sdk/platform-tools/adb shell input keyevent 82


      - name: Install Appium and UiAutomator2 driver
        run: |
          npm install -g appium
          appium driver install uiautomator2

      - name: Start Appium Server
        run: |
          appium --base-path /wd/hub &
          sleep 5 

      - name: Run automation
        run: python musinsa.py



